// Generated by CoffeeScript 1.6.3
(function() {
  var I18nCli, I18nMiddleware, async, exec, fs, i18n, i18nCli;

  i18n = require('i18n');

  fs = require('fs');

  exec = require('child_process').exec;

  I18nMiddleware = require('./middleware').Class;

  async = require('async');

  I18nCli = (function() {
    function I18nCli(args) {
      this.action = args[0];
      this.args = args.slice(1);
    }

    I18nCli.prototype.run = function() {
      var _ref;
      if (!(this.action && ((_ref = this.action) === 'format' || _ref === 'revert' || _ref === 'compile' || _ref === 'help'))) {
        console.error('params missing');
        return false;
      }
      return this[this.action]();
    };

    I18nCli.prototype.format = function() {};

    I18nCli.prototype.revert = function() {};

    I18nCli.prototype.compile = function() {
      var directory, fileList, i18nMiddleware, lang, options, src, testExts, _ref;
      _ref = this.args, lang = _ref[0], directory = _ref[1], src = _ref[2], testExts = _ref[3];
      options = {};
      options.force = true;
      lang = lang || 'all';
      directory = directory || ("" + (process.cwd()) + "/src/locales");
      src = src || 'src';
      testExts = (testExts != null ? testExts.split(',') : void 0) || ['.coffee', '.html'];
      i18nMiddleware = new I18nMiddleware(options);
      fileList = [];
      return async.eachSeries(testExts, (function(ext, next) {
        return exec("find " + src + " -name '*" + ext + "'", function(err, result) {
          if (err != null) {
            return next(err);
          }
          fileList = fileList.concat(result.trim().split("\n"));
          return next();
        });
      }), function(err) {
        if (err != null) {
          throw err;
        }
        return async.each(fileList, (function(file, next) {}), function(err) {});
      });
    };

    I18nCli.prototype.help = function() {};

    return I18nCli;

  })();

  i18nCli = function() {
    i18nCli = new I18nCli(arguments[0]);
    return i18nCli.run();
  };

  module.exports = i18nCli;

}).call(this);
